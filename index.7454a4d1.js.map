{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $197cd56b15c33885$var$CLASSNAME = Object.freeze({\n    Start: \"start\",\n    Restart: \"restart\",\n    Hidden: \"hidden\",\n    ActionButton: \"button\"\n});\nvar $197cd56b15c33885$var$LABEL = Object.freeze({\n    Start: \"Start\",\n    Restart: \"Restart\"\n});\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : structuredClone(Game.DEFAULT_BOARD), startTilesAmount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Game.START_TILES_QUANTITY_DEFAULT;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"status\", Game.STATUS.Idle);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"score\", 0);\n        this.state = initialState;\n        this.startTilesAmount = startTilesAmount;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"size\",\n            get: function get() {\n                return this.state.length;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(key) {\n                switch(key){\n                    case \"ArrowUp\":\n                        this.moveUp();\n                        break;\n                    case \"ArrowRight\":\n                        this.moveRight();\n                        break;\n                    case \"ArrowDown\":\n                        this.moveDown();\n                        break;\n                    case \"ArrowLeft\":\n                        this.moveLeft();\n                        break;\n                }\n                this.placeNewTile();\n                this.updateGameStatus();\n            }\n        },\n        {\n            key: \"handleMove\",\n            value: function handleMove() {\n                for(var col = 0; col < this.size; col++){\n                    var numbers = [];\n                    for(var row = 0; row < this.size; row++)if (this.state[row][col] !== 0) numbers.push(this.state[row][col]);\n                    var merged = [];\n                    var i = 0;\n                    while(i < numbers.length)if (i + 1 < numbers.length && numbers[i] === numbers[i + 1]) {\n                        var stackedNumber = numbers[i] * 2;\n                        merged.push(stackedNumber);\n                        this.score += stackedNumber;\n                        i += 2;\n                    } else {\n                        merged.push(numbers[i]);\n                        i++;\n                    }\n                    while(merged.length < this.size)merged.push(0);\n                    for(var row1 = 0; row1 < this.size; row1++)this.state[row1][col] = merged[row1];\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.handleMove();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.reverseGrid();\n                this.handleMove();\n                this.reverseGrid();\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.rotateClockwise();\n                this.handleMove();\n                this.rotateCounterClockwise();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.rotateCounterClockwise();\n                this.handleMove();\n                this.rotateClockwise();\n            }\n        },\n        {\n            key: \"reverseGrid\",\n            value: function reverseGrid() {\n                this.state.reverse();\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var ref;\n                for(var i = 0; i < this.size; i++)for(var j = i + 1; j < this.size; j++)ref = [\n                    this.state[j][i],\n                    this.state[i][j]\n                ], this.state[i][j] = ref[0], this.state[j][i] = ref[1], ref;\n            }\n        },\n        {\n            key: \"rotateClockwise\",\n            value: function rotateClockwise() {\n                this.transpose();\n                this.state.forEach(function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"rotateCounterClockwise\",\n            value: function rotateCounterClockwise() {\n                this.state.forEach(function(row) {\n                    return row.reverse();\n                });\n                this.transpose();\n            }\n        },\n        {\n            key: \"updateGameStatus\",\n            value: function updateGameStatus() {\n                if (this.checkMovePossibility()) return;\n                this.status = Game.STATUS.Lost;\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(2048)) {\n                            this.status = Game.STATUS.Won;\n                            return;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.Playing;\n                for(var i = 0; i < this.startTilesAmount; i++)this.placeNewTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.STATUS.Idle;\n                this.state = structuredClone(Game.DEFAULT_BOARD);\n                this.score = 0;\n                this.start();\n            }\n        },\n        {\n            key: \"getTwoOrFour\",\n            value: function getTwoOrFour() {\n                return Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"placeNewTile\",\n            value: function placeNewTile() {\n                var emptyCells = [];\n                for(var row = 0; row < this.size; row++){\n                    for(var col = 0; col < this.size; col++)if (this.state[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var randomCellIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomCellIndex = emptyCells[randomCellIndex], row1 = _emptyCells_randomCellIndex.row, col1 = _emptyCells_randomCellIndex.col;\n                    this.state[row1][col1] = this.getTwoOrFour();\n                }\n            }\n        },\n        {\n            key: \"checkMovePossibility\",\n            value: function checkMovePossibility() {\n                for(var row = 0; row < this.size; row++)for(var col = 0; col < this.size; col++){\n                    if (this.state[row][col] === 0) return true;\n                }\n                for(var row1 = 0; row1 < this.size; row1++)for(var col1 = 0; col1 < this.size - 1; col1++){\n                    if (this.state[row1][col1] === this.state[row1][col1 + 1]) return true;\n                }\n                for(var col2 = 0; col2 < this.size; col2++)for(var row2 = 0; row2 < this.size - 1; row2++){\n                    if (this.state[row2][col2] === this.state[row2 + 1][col2]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"START_TILES_QUANTITY_DEFAULT\", 2);\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"DEFAULT_BOARD\", Array(4).fill().map(function() {\n    return Array(4).fill(0);\n}));\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"MOVE_KEYS\", Object.freeze([\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"ArrowUp\",\n    \"ArrowDown\"\n]));\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS\", Object.freeze({\n    Idle: \"Idle\",\n    Playing: \"Playing\",\n    Lost: \"Lost\",\n    Won: \"Won\"\n}));\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameContainer = document.querySelector(\".container\");\nvar $197cd56b15c33885$var$actionButton = $197cd56b15c33885$var$gameContainer.querySelector(\".controls button\");\nvar $197cd56b15c33885$var$scoreInfo = $197cd56b15c33885$var$gameContainer.querySelector(\".controls .info\");\nvar $197cd56b15c33885$var$scoreNumberField = $197cd56b15c33885$var$gameContainer.querySelector(\".controls .game-score\");\nvar $197cd56b15c33885$var$gameGrid = $197cd56b15c33885$var$gameContainer.querySelector(\".game-field tbody\");\nvar $197cd56b15c33885$var$messageStart = $197cd56b15c33885$var$gameContainer.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = $197cd56b15c33885$var$gameContainer.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = $197cd56b15c33885$var$gameContainer.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$renderGame() {\n    $197cd56b15c33885$var$updateScoreDisplay();\n    $197cd56b15c33885$var$updateGameBoard();\n    $197cd56b15c33885$var$updateGameStatusMessage();\n}\nfunction $197cd56b15c33885$var$updateScoreDisplay() {\n    $197cd56b15c33885$var$scoreNumberField.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$updateGameStatusMessage() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    var isGameIdle = gameStatus === $3d28d7f1aac198f5$exports.STATUS.Idle;\n    $197cd56b15c33885$var$messageStart.classList.add($197cd56b15c33885$var$CLASSNAME.Hidden);\n    $197cd56b15c33885$var$messageWin.classList.add($197cd56b15c33885$var$CLASSNAME.Hidden);\n    $197cd56b15c33885$var$messageLose.classList.add($197cd56b15c33885$var$CLASSNAME.Hidden);\n    $197cd56b15c33885$var$actionButton.classList.remove($197cd56b15c33885$var$CLASSNAME.Restart, $197cd56b15c33885$var$CLASSNAME.Start);\n    $197cd56b15c33885$var$actionButton.classList.add(isGameIdle ? $197cd56b15c33885$var$CLASSNAME.Start : $197cd56b15c33885$var$CLASSNAME.Restart);\n    $197cd56b15c33885$var$actionButton.textContent = isGameIdle ? $197cd56b15c33885$var$LABEL.Start : $197cd56b15c33885$var$LABEL.Restart;\n    switch(gameStatus){\n        case $3d28d7f1aac198f5$exports.STATUS.Won:\n            $197cd56b15c33885$var$messageWin.classList.remove($197cd56b15c33885$var$CLASSNAME.Hidden);\n            break;\n        case $3d28d7f1aac198f5$exports.STATUS.Lost:\n            $197cd56b15c33885$var$messageLose.classList.remove($197cd56b15c33885$var$CLASSNAME.Hidden);\n            break;\n    }\n}\nfunction $197cd56b15c33885$var$updateGameBoard() {\n    var grid = $197cd56b15c33885$var$game.getState();\n    var numRows = $197cd56b15c33885$var$gameGrid.rows.length;\n    var numCols = $197cd56b15c33885$var$gameGrid.rows[0].cells.length;\n    for(var rowIndex = 0; rowIndex < numRows; rowIndex++)for(var colIndex = 0; colIndex < numCols; colIndex++){\n        var cell = $197cd56b15c33885$var$gameGrid.rows[rowIndex].cells[colIndex];\n        var value = grid[rowIndex][colIndex];\n        cell.textContent = value || \"\";\n        cell.className = \"field-cell \".concat(value ? \"field-cell--\".concat(value) : \"\");\n    }\n}\ndocument.addEventListener(\"keydown\", function(ev) {\n    if ($3d28d7f1aac198f5$exports.MOVE_KEYS.includes(ev.key)) {\n        ev.preventDefault();\n        $197cd56b15c33885$var$game.move(ev.key);\n        $197cd56b15c33885$var$renderGame();\n    }\n});\n$197cd56b15c33885$var$actionButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.STATUS.Idle) $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$renderGame();\n});\n$197cd56b15c33885$var$scoreInfo.addEventListener(\"click\", function() {\n    // eslint-disable-next-line no-console\n    console.log($197cd56b15c33885$var$game.getScore());\n});\n\n})();\n//# sourceMappingURL=index.7454a4d1.js.map\n","'use strict';\n\nconst CLASSNAME = Object.freeze({\n  Start: 'start',\n  Restart: 'restart',\n  Hidden: 'hidden',\n  ActionButton: 'button',\n});\nconst LABEL = Object.freeze({\n  Start: 'Start',\n  Restart: 'Restart',\n});\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameContainer = document.querySelector('.container');\nconst actionButton = gameContainer.querySelector('.controls button');\nconst scoreInfo = gameContainer.querySelector('.controls .info');\nconst scoreNumberField = gameContainer.querySelector('.controls .game-score');\nconst gameGrid = gameContainer.querySelector('.game-field tbody');\nconst messageStart = gameContainer.querySelector('.message-start');\nconst messageWin = gameContainer.querySelector('.message-win');\nconst messageLose = gameContainer.querySelector('.message-lose');\n\nfunction renderGame() {\n  updateScoreDisplay();\n  updateGameBoard();\n  updateGameStatusMessage();\n}\n\nfunction updateScoreDisplay() {\n  scoreNumberField.textContent = game.getScore();\n}\n\nfunction updateGameStatusMessage() {\n  const gameStatus = game.getStatus();\n  const isGameIdle = gameStatus === Game.STATUS.Idle;\n\n  messageStart.classList.add(CLASSNAME.Hidden);\n  messageWin.classList.add(CLASSNAME.Hidden);\n  messageLose.classList.add(CLASSNAME.Hidden);\n\n  actionButton.classList.remove(CLASSNAME.Restart, CLASSNAME.Start);\n\n  actionButton.classList.add(isGameIdle ? CLASSNAME.Start : CLASSNAME.Restart);\n  actionButton.textContent = isGameIdle ? LABEL.Start : LABEL.Restart;\n\n  switch (gameStatus) {\n    case Game.STATUS.Won:\n      messageWin.classList.remove(CLASSNAME.Hidden);\n      break;\n    case Game.STATUS.Lost:\n      messageLose.classList.remove(CLASSNAME.Hidden);\n      break;\n  }\n}\n\nfunction updateGameBoard() {\n  const grid = game.getState();\n  const numRows = gameGrid.rows.length;\n  const numCols = gameGrid.rows[0].cells.length;\n\n  for (let rowIndex = 0; rowIndex < numRows; rowIndex++) {\n    for (let colIndex = 0; colIndex < numCols; colIndex++) {\n      const cell = gameGrid.rows[rowIndex].cells[colIndex];\n      const value = grid[rowIndex][colIndex];\n\n      cell.textContent = value || '';\n      cell.className = `field-cell ${value ? `field-cell--${value}` : ''}`;\n    }\n  }\n}\n\ndocument.addEventListener('keydown', (ev) => {\n  if (Game.MOVE_KEYS.includes(ev.key)) {\n    ev.preventDefault();\n    game.move(ev.key);\n    renderGame();\n  }\n});\n\nactionButton.addEventListener('click', () => {\n  if (game.getStatus() === Game.STATUS.Idle) {\n    game.start();\n  } else {\n    game.restart();\n  }\n  renderGame();\n});\n\nscoreInfo.addEventListener('click', () => {\n  // eslint-disable-next-line no-console\n  console.log(game.getScore());\n});\n","'use strict';\n\nclass Game {\n  static START_TILES_QUANTITY_DEFAULT = 2;\n  static DEFAULT_BOARD = Array(4)\n    .fill()\n    .map(() => Array(4).fill(0));\n  static MOVE_KEYS = Object.freeze([\n    'ArrowLeft',\n    'ArrowRight',\n    'ArrowUp',\n    'ArrowDown',\n  ]);\n  static STATUS = Object.freeze({\n    Idle: 'Idle',\n    Playing: 'Playing',\n    Lost: 'Lost',\n    Won: 'Won',\n  });\n\n  status = Game.STATUS.Idle;\n  score = 0;\n\n  constructor(\n    initialState = structuredClone(Game.DEFAULT_BOARD),\n    startTilesAmount = Game.START_TILES_QUANTITY_DEFAULT,\n  ) {\n    this.state = initialState;\n    this.startTilesAmount = startTilesAmount;\n  }\n\n  get size() {\n    return this.state.length;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  move(key) {\n    switch (key) {\n      case 'ArrowUp':\n        this.moveUp();\n        break;\n      case 'ArrowRight':\n        this.moveRight();\n        break;\n      case 'ArrowDown':\n        this.moveDown();\n        break;\n      case 'ArrowLeft':\n        this.moveLeft();\n        break;\n    }\n    this.placeNewTile();\n    this.updateGameStatus();\n  }\n\n  handleMove() {\n    for (let col = 0; col < this.size; col++) {\n      const numbers = [];\n\n      for (let row = 0; row < this.size; row++) {\n        if (this.state[row][col] !== 0) {\n          numbers.push(this.state[row][col]);\n        }\n      }\n\n      const merged = [];\n      let i = 0;\n\n      while (i < numbers.length) {\n        if (i + 1 < numbers.length && numbers[i] === numbers[i + 1]) {\n          const stackedNumber = numbers[i] * 2;\n\n          merged.push(stackedNumber);\n          this.score += stackedNumber;\n          i += 2;\n        } else {\n          merged.push(numbers[i]);\n          i++;\n        }\n      }\n\n      while (merged.length < this.size) {\n        merged.push(0);\n      }\n\n      for (let row = 0; row < this.size; row++) {\n        this.state[row][col] = merged[row];\n      }\n    }\n  }\n\n  moveUp() {\n    this.handleMove();\n  }\n\n  moveDown() {\n    this.reverseGrid();\n    this.handleMove();\n    this.reverseGrid();\n  }\n\n  moveLeft() {\n    this.rotateClockwise();\n    this.handleMove();\n    this.rotateCounterClockwise();\n  }\n\n  moveRight() {\n    this.rotateCounterClockwise();\n    this.handleMove();\n    this.rotateClockwise();\n  }\n\n  reverseGrid() {\n    this.state.reverse();\n  }\n\n  transpose() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = i + 1; j < this.size; j++) {\n        [this.state[i][j], this.state[j][i]] = [\n          this.state[j][i],\n          this.state[i][j],\n        ];\n      }\n    }\n  }\n\n  rotateClockwise() {\n    this.transpose();\n    this.state.forEach((row) => row.reverse());\n  }\n\n  rotateCounterClockwise() {\n    this.state.forEach((row) => row.reverse());\n    this.transpose();\n  }\n\n  updateGameStatus() {\n    if (this.checkMovePossibility()) {\n      return;\n    }\n    this.status = Game.STATUS.Lost;\n\n    for (const row of this.state) {\n      if (row.includes(2048)) {\n        this.status = Game.STATUS.Won;\n\n        return;\n      }\n    }\n  }\n\n  start() {\n    this.status = Game.STATUS.Playing;\n\n    for (let i = 0; i < this.startTilesAmount; i++) {\n      this.placeNewTile();\n    }\n  }\n\n  restart() {\n    this.status = Game.STATUS.Idle;\n    this.state = structuredClone(Game.DEFAULT_BOARD);\n    this.score = 0;\n    this.start();\n  }\n\n  getTwoOrFour() {\n    return Math.random() < 0.9 ? 2 : 4;\n  }\n\n  placeNewTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.state[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomCellIndex = Math.floor(Math.random() * emptyCells.length);\n      const { row, col } = emptyCells[randomCellIndex];\n\n      this.state[row][col] = this.getTwoOrFour();\n    }\n  }\n\n  checkMovePossibility() {\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.state[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size - 1; col++) {\n        if (this.state[row][col] === this.state[row][col + 1]) {\n          return true;\n        }\n      }\n    }\n\n    for (let col = 0; col < this.size; col++) {\n      for (let row = 0; row < this.size - 1; row++) {\n        if (this.state[row][col] === this.state[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":["$197cd56b15c33885$var$CLASSNAME","Object","freeze","Start","Restart","Hidden","ActionButton","$197cd56b15c33885$var$LABEL","$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","defineProperty","enumerable","configurable","writable","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","length","structuredClone","DEFAULT_BOARD","startTilesAmount","START_TILES_QUANTITY_DEFAULT","instance","Constructor","TypeError","STATUS","Idle","state","get","score","status","moveUp","moveRight","moveDown","moveLeft","placeNewTile","updateGameStatus","col","size","numbers","row","push","merged","i","stackedNumber","row1","handleMove","reverseGrid","rotateClockwise","rotateCounterClockwise","reverse","ref","j","transpose","forEach","checkMovePossibility","Lost","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","includes","Won","err","return","Playing","start","Math","random","emptyCells","randomCellIndex","floor","_emptyCells_randomCellIndex","col1","getTwoOrFour","col2","row2","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","prototype","Array","fill","map","$197cd56b15c33885$var$game","$197cd56b15c33885$var$gameContainer","document","querySelector","$197cd56b15c33885$var$actionButton","$197cd56b15c33885$var$scoreInfo","$197cd56b15c33885$var$scoreNumberField","$197cd56b15c33885$var$gameGrid","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$renderGame","textContent","getScore","$197cd56b15c33885$var$updateGameBoard","grid","getState","numRows","rows","numCols","cells","rowIndex","colIndex","cell","className","concat","$197cd56b15c33885$var$updateGameStatusMessage","gameStatus","getStatus","isGameIdle","classList","add","remove","addEventListener","ev","MOVE_KEYS","preventDefault","move","restart","console","log"],"version":3,"file":"index.7454a4d1.js.map"}